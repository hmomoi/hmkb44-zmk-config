#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        lt_impl: layer-tap-by-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BY_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R                        &kp T          &kp Y        &kp U                        &kp I      &kp O    &kp P          &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D  &kp F                        &kp G          &kp H        &kp J                        &kp K      &kp L    &kp SEMICOLON  &kp ENTER
&kp LEFT_SHIFT  &kp SLASH   &kp Z  &kp X  &kp C  &kp V  &kp B   &kp N   &kp M   &kp COMMA   &kp DOT &kp RIGHT_SHIFT
&kp LCTRL       &kp LGUI  &kp LALT  &kp SPACE   &mo 1   &kp SPACE   &mo 2   &kp RALT &kp RCTRL
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4       &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7          &kp NUMBER_8           &kp NUMBER_9  &kp NUMBER_0   &trans
&trans  &trans        &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans          &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans        &kp BACKSLASH
&trans  &kp ESC       &trans  &trans            &trans             &trans          &trans        &trans                &trans                 &trans        &kp PIPE       &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT     &kp CARET     &kp AMPERSAND      &kp ASTERISK      &kp MINUS  &kp UNDERSCORE  &trans
&trans  &kp GRAVE        &kp TILDE    &trans     &trans      &kp C_VOL_UP    &kp C_VOL_DN  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp EQUAL  &kp PLUS
&kp F1  &kp F2           &kp F3       &kp F4     &kp F5      &kp F6          &kp F7        &kp F8             &kp F9            &kp F10    &kp F11         &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans          &kp LC(LS(TAB))         &kp PRINTSCREEN      &kp LC(TAB)              &trans                     &trans  &kp HOME        &kp UP_ARROW    &kp END           &trans  &trans
&trans  &trans          &kp LG(LEFT_ARROW)      &kp LG(RIGHT_ARROW)  &kp LC(LG(LEFT_ARROW))   &kp LC(LG(RIGHT_ARROW))    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans               &kp LG(LS(RIGHT_ARROW))  &trans                     &trans  &kp DELETE      &kp PAGE_UP     &kp PAGE_DOWN    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &tog 6        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
